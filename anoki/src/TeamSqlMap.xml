<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="team">
	
	
	<select id="teamSearch" parameterClass="com.anoki.jaxb.Search"
		resultClass="com.anoki.jaxb.Team">
		SELECT 
			TEAM.PICTURE,
			TEAM.NAME,
			TEAM.ID
		FROM TEAM
		WHERE TEAM.NAME LIKE CONCAT('%', #searchKey#, '%')
	</select>
	
	<select id="getTeam" parameterClass="com.anoki.jaxb.Search"
		resultClass="com.anoki.jaxb.Team">
		SELECT 
			TEAM.PICTURE,
			TEAM.NAME,
			TEAM.TEXT,
			MEMBER.STATE AS JOINED,
			(SELECT GROUP_CONCAT(USER.NAME, ', ') FROM MEMBER 
				LEFT OUTER JOIN USER ON USER.ID = MEMBER.USER
				WHERE MEMBER.TEAM = TEAM.ID
				AND (MEMBER.ROLE = '3' OR MEMBER.ROLE = '2') 
			) AS LEADER,
			(SELECT COUNT(USER) FROM MEMBER WHERE TEAM = TEAM.ID AND STATE = 'J') AS MEMBERCOUNT,
			TEAM.SCOPE,
			TEAM.JOIN_ACK AS JOINACK,
			TEAM.PROFILE_AUTH AS PROFILEAUTH,
			TEAM.REGISTER_AUTH AS REGISTERAUTH,
			TEAM.INVITE_AUTH AS INVITEAUTH,
			TEAM.LEAVE_AUTH AS LEAVEAUTH			
		FROM TEAM
		LEFT OUTER JOIN MEMBER ON TEAM.ID = MEMBER.TEAM AND MEMBER.USER = #id#  
		WHERE TEAM.ID = #searchId#
	</select>
	
	
	
	<select id="teamPrayer" parameterClass="com.anoki.jaxb.Search"
		resultClass="com.anoki.jaxb.Prayer">
		SELECT
		USER.PICTURE AS USERPICTURE,
		USER.NAME AS USERNAME,
		PRAYER.TIME AS TIME,
		PRAYER.BACK AS BACK,
		PRAYER.TEXT AS TEXT,
		PRAYER.ID AS ID,
		PRAYER.USER AS USERID,
		(SELECT COUNT(*) FROM PRAY WHERE PRAYER = PRAYER.ID) AS PRAYCOUNT,
		(SELECT COUNT(*) FROM REPLY 
			WHERE PRAYER = PRAYER.ID
			AND (PUBLIC = 'Y' OR USER = #id# OR USER.ID = #id#) 
		) AS REPLYCOUNT,
		(SELECT MAX(TIME) FROM PRAY WHERE PRAYER = PRAYER.ID AND USER=#id#) AS LASTPRAYED,
		SCRAP.ID AS SCRAPD
		FROM PRAYER
		LEFT OUTER JOIN USER ON PRAYER.USER = USER.ID
		LEFT OUTER JOIN SCRAP ON PRAYER.ID = SCRAP.PRAYER AND SCRAP.USER=#id#
		WHERE
		PRAYER.TEAM = #searchId#
		ORDER
		BY PRAYER.TIME DESC
		LIMIT #page#,#size#
	</select>
	
	
	<insert id="insertTeam" parameterClass="com.anoki.jaxb.Team">
		INSERT INTO TEAM (
			NAME,
			PICTURE,
			TEXT,
			SCOPE,
			JOIN_ACK,
			REMAIN,
			DALANT
		) VALUES (
			#name#,
			#picture#,
			#text#,
			#scope#,
			#joinAck#,
			#remain#,
			#dalant#
		)
		
		<selectKey keyProperty="id" resultClass="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<insert id="insertFirstMember" parameterClass="com.anoki.jaxb.Team">
		INSERT INTO MEMBER (
			TEAM,
			USER,
			STATE,
			ROLE
		) VALUES (
			#id#,
			#userId#,
			'J',
			'3'
		)
	</insert>
	
	<insert id="insertMember" parameterClass="com.anoki.jaxb.Member">
		INSERT INTO MEMBER (
			TEAM,
			USER
		) VALUES (
			#team#,
			#user#
		)
	</insert>
	
	
	<select id="teamMembers" parameterClass="com.anoki.jaxb.Search"
		resultClass="com.anoki.jaxb.User">
		SELECT
			USER.PICTURE,
			USER.NAME,
			USER.ID
		FROM MEMBER
			LEFT OUTER JOIN USER ON MEMBER.USER = USER.ID
		WHERE
			MEMBER.TEAM = #searchId#
			AND MEMBER.STATE = #searchKey#
		LIMIT #page#,#size#
	</select>
	
	<update id="updateMember" parameterClass="com.anoki.jaxb.Member">
		UPDATE MEMBER SET ROLE = #role#
		WHERE TEAM = #team#
		AND USER = #user#
	</update>

	<update id="updateTeam" parameterClass="com.anoki.jaxb.Team">
		UPDATE TEAM SET 
		PICTURE = #picture#
		, NAME = #name#
		, TEXT = #text#
		, SCOPE = #scope#
		, JOIN_ACK = #joinAck#
		, PROFILE_AUTH = #profileAuth#
		, REGISTER_AUTH = #registerAuth#
		, INVITE_AUTH = #inviteAuth#
		, LEAVE_AUTH = #leaveAuth#		
		WHERE ID = #id#
	</update>

	<insert id="join" parameterClass="com.anoki.jaxb.Member">
		INSERT INTO MEMBER (
			TEAM,
			USER,
			STATE
		) VALUES (
			#team#,
			#user#,
			#state#
		)
	</insert>
	
	<update id="updateMemberState" parameterClass="com.anoki.jaxb.Member">
		UPDATE MEMBER SET STATE = #state#
		WHERE TEAM = #team#
		AND USER = #user#
	</update>
	
	<select id="bigTeamList" resultClass="com.anoki.jaxb.Team">
		SELECT 
			TEAM.ID,
			TEAM.DALANT,
			MEMBER.USER AS LEADERID,
			USER.DALANT AS LEADERDALANT
		FROM TEAM
		LEFT OUTER JOIN MEMBER ON TEAM.ID = MEMBER.TEAM AND MEMBER.ROLE =3 
		LEFT OUTER JOIN USER ON MEMBER.USER = USER.ID
		WHERE TEAM.DALANT > 0
		AND TEAM.PAYED = 'N'
		
	</select>
	
	<update id="resetPayed">
		UPDATE TEAM SET PAYED = 'N'
		WHERE DAYOFMONTH( NOW() )  = PAY_DAY
	</update>
	
	<update id="paySucceed" parameterClass="com.anoki.jaxb.Team">
		UPDATE TEAM
		SET PAYED = 'Y'
		WHERE ID = #id#
	</update>
	
	
	<update id="payFailed" parameterClass="com.anoki.jaxb.Team">
		UPDATE TEAM
		SET PAYED = 'N', POSTPONED  = POSTPONED + 1
		WHERE ID = #id#
	</update>
	
</sqlMap>