<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="friend">

	
	<update id="acceptFriendRequest" parameterClass="String">
		UPDATE FRIEND SET STATE = 'A'
		WHERE ID = #id#
	</update>
	
	<select id="checkFriend" parameterClass="com.anoki.jaxb.Friend" resultClass="int">
		SELECT ID FROM FRIEND
		WHERE (USER = #user# AND FRIEND = #friend#)
		OR (FRIEND = #user# AND USER = #friend#)
		
	</select>
	
	
	
	<insert id="insertFriend" parameterClass="com.anoki.jaxb.Friend">
		INSERT INTO FRIEND(
			USER,FRIEND
		) VALUES (#user#,#friend#)
	</insert>

	<select id="friend" parameterClass="com.anoki.jaxb.Search"
		resultClass="com.anoki.jaxb.Friend">
		SELECT * FROM(
			SELECT
				USER.PICTURE,
				USER.NAME,
				FRIEND.FRIEND,
				FRIEND.STATE,
				USER.PHONE
			FROM FRIEND 
			LEFT OUTER JOIN USER ON FRIEND.FRIEND = USER.ID 
			WHERE FRIEND.USER = #id#
			<isNotEmpty property="searchKey">
			AND FRIEND.STATE = #searchKey#
			</isNotEmpty>
			UNION
			SELECT
				USER.PICTURE,
				USER.NAME,
				FRIEND.USER AS FRIEND, 
				FRIEND.STATE,	
				USER.PHONE
			FROM FRIEND 
			LEFT OUTER JOIN USER ON FRIEND.USER = USER.ID 
			WHERE FRIEND.FRIEND = #id#
			<isNotEmpty property="searchKey">
			AND FRIEND.STATE = #searchKey#
			</isNotEmpty>
		) X
		ORDER BY X.NAME	
	</select>
	
	
	<update id="updateFriend" parameterClass="com.anoki.jaxb.Friend">
		UPDATE FRIEND SET STATE = #state#
		WHERE (USER= #user# AND FRIEND = #friend#)
		OR (FRIEND= #user# AND USER = #friend#)
	</update>
	
	<insert id="addFriend" parameterClass="com.anoki.jaxb.Invite">
		INSERT INTO FRIEND(
			USER,FRIEND
		) 
		SELECT
			#id#, 
			ID 
		FROM USER 
		WHERE CONCAT(COUNTRY,PHONE) IN
		<iterate  property="phone" open="("
			conjunction="," close=")">
			CONCAT(#phone[].country#, #phone[].number#)
		</iterate>
	</insert>
	
</sqlMap>

